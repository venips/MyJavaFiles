public class Collection {

	public static void main(String[] args) {
		int indScore[] = {100,101,25,10};
		
		int ausScore[] = new int [ 11 ];
		ausScore[0]=100;
		ausScore[1]=101;
		ausScore[2]=25;
		ausScore[3]=10;
		ausScore[4]=35;
		ausScore[5]=60;
		
		int indScoreTotal=0;
		int ausScoreTotal=0;
		
		for(int i=0;i<indScore.length;i++) {
			System.out.println("Score is :" +indScore[i]);
			indScoreTotal = indScoreTotal + indScore[i];
		}
		System.out.println("Indian Total Score..." +indScoreTotal);
		System.out.println("Trying to set the 5th value in indScore...");
		try {
			indScore[4]=80;
		}
		catch(ArrayIndexOutOfBoundsException e){
			System.out.println("Index is wrong.."+e);
		}
		for(int i=0;i<ausScore.length;i++) {
			System.out.println("Score is :" +ausScore[i]);
			ausScoreTotal = ausScoreTotal + ausScore[i];
			System.out.println("Australian Total Score..." +ausScoreTotal);
		}
	}
}
------------------------------------------------------------------------------------------


public class ObjectArrayTest {

	public static void main(String[] args) {
		Employee e1 = new Employee(101,"Deepa",10000);
		Employee e2 = new Employee(102,"Veena",20000);
		Employee e3 = new Employee(103,"Jerry",30000);
		
		Employee staff[] = new Employee[5];
		
		staff[0] = new Employee(101,"Deepa",10000);
		staff[1] = new Employee(102,"Veena",20000);
		staff[2] = new Employee(103,"Jerry",30000);
		staff[3] = new Employee(104,"Gayu",12000);
		staff[4] = new Employee(105,"Sita",7000);
		
		for(int i=0;i<staff.length;i++) {
			System.out.println("Staff .."+staff[i]);
		}
		
	
	}

}
class Employee
{
	int employeeNumber;
	String employeeName;
	float employeeSalary;
	public Employee(int employeeNumber, String employeeName, float employeeSalary) {
		super();
		this.employeeNumber = employeeNumber;
		this.employeeName = employeeName;
		this.employeeSalary = employeeSalary;
	}
	@Override
	public String toString() {
		return "Employee [employeeNumber=" + employeeNumber + ", employeeName=" + employeeName + ", employeeSalary="
				+ employeeSalary + "]";
	}

}
-----------------------------------------------------------------------------------------------------------------------------------

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.TreeSet;

import emp.Employee;

public class ObjectArrayTest2 {

		public static void main(String[] args) {
			TreeSet primeNumbers = new TreeSet();
			System.out.println("Adding the 1st prime number");
			primeNumbers.add(2);
			
			System.out.println("Adding the 2nd prime number");
			primeNumbers.add(3);

			System.out.println("Adding the 3rd prime number");
			primeNumbers.add(5);
			
			System.out.println("Adding the 4th prime number");
			primeNumbers.add(7);
			primeNumbers.add(11);
			primeNumbers.add(13);
			primeNumbers.add(17);
			primeNumbers.add(19);
			
			System.out.println("Added all the prime number");
			
			Iterator primeIterator = primeNumbers.iterator();
			while(primeIterator.hasNext()) {
				int x = (int)primeIterator.next();
				System.out.println("Prime Number"+x);	
			}
			Employee e1 = new Employee(101,"Deepa",10000);
			Employee e2 = new Employee(102,"Veena",20000);
			Employee e3 = new Employee(103,"Jerry",30000);
			
			//ArrayList<Employee> staff = new ArrayList<Employee>();
			//LinkedList<Employee> staff = new LinkedList<Employee>();
			//HashSet<Employee> staff = new HashSet<Employee>();
			TreeSet<Employee> staff = new TreeSet<Employee>();
			System.out.println("TreeSet is created....");
			
			System.out.println("Trying to add 1st object");
			staff.add(new Employee(30,"Veera",12000));
			
			System.out.println("Trying to add 2nd object");
			staff.add(new Employee(25,"Ram",13000));
			
			System.out.println("Trying to add 3rd object");
			staff.add(new Employee(70,"Veena",19000));
			
			System.out.println("Trying to add 4th object");
			staff.add(new Employee(15,"Remo",8000));
			
			System.out.println("Trying to add 5th object");
			staff.add(new Employee(5,"Seeju",35000));
			
			System.out.println("Trying to add 5th object");
			staff.add(new Employee(104,"Gayu",12000));
			
			System.out.println("Trying to add 6th object");
			staff.add(e1);
			
			System.out.println("Trying to add 7th object");
			staff.add(e2);
			
			System.out.println("Adding the 8th object....");
			staff.add(e3);
			
			System.out.println("Added the 9th employee...");
			staff.add(new Employee(45,"Raju",23000));
			
			Iterator<Employee> iterator = staff.iterator();
			while(iterator.hasNext())
			{
				Employee theEmp = iterator.next();
				System.out.println("Details of the Employee"+theEmp);
				
			}
			/*for(int i=0;i<staff.size();i++) {
				System.out.println("Staff .."+staff.get(i));
			}
			
		
		}*/
		}
	}
	
----------------------------------------------------------------------------------------------------------

package emp;

public class Employee  implements Comparable<Employee>{

	
		int employeeNumber;
		String employeeName;
		float employeeSalary;
		public Employee(int employeeNumber, String employeeName, float employeeSalary) {
			super();
			this.employeeNumber = employeeNumber;
			this.employeeName = employeeName;
			this.employeeSalary = employeeSalary;
		}
		@Override
		public String toString() {
			return "Employee [employeeNumber=" + employeeNumber + ", employeeName=" + employeeName + ", employeeSalary="
					+ employeeSalary + "]";
		}
		@Override
		public int compareTo(Employee o) {
			System.out.println("Comparing"+employeeNumber+"with"+o.employeeNumber);
			
			return Integer.compare(employeeNumber,o.employeeNumber);
		}

	}
  -----------------------------------------------------------------------------------------------------
  
  import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.TreeSet;

public class ArrayClass {

	public static void main(String[] args) {
		ArrayList<Log> log = new ArrayList<Log>();
		System.out.println("-------------Array List----------");
		System.out.println("Missed contact Details...");
		log.add(new Log("Missed", LocalDate.of(2022, 03, 28), "Karthik"));
		System.out.println("Received contact Details...");
		log.add(new Log("Received", LocalDate.of(2022, 03, 27), "Sreejan"));
		System.out.println("Dialled contact Details...");
		log.add(new Log("Dialled", LocalDate.of(2022, 03, 26), "Veera"));
		
		Iterator<Log> iteratorLog = log.iterator();
		while(iteratorLog.hasNext()) {
			Log thelog = iteratorLog.next();
			System.out.println("Details of the "+thelog);
		}
		
		LinkedList<Contact>contact = new LinkedList<Contact>();
		System.out.println("-------------Linked List----------");
		contact.add(new Contact("Raju", 9965738573l, "seeju@gmail.com"));
		contact.add(new Contact("Meena", 8095063190l, "meenu@gmail.com"));
		
		Iterator<Contact> iteratorContact = contact.iterator();
		while(iteratorContact.hasNext()) {
			Contact thecontact = iteratorContact.next();
			System.out.println("Details of the "+thecontact);
		}
		HashSet<Book>book = new HashSet<Book>();
		System.out.println("-------------Hash Set----------");
		book.add(new Book(2531, "The fairy Tale", "Saroja", 250));
		book.add(new Book(2501, "Kunfu Panda", "Ju Adam", 320));
		book.add(new Book(501, "Children Story", "Padma", 120));
		
		Iterator<Book> iteratorBook = book.iterator();
		while(iteratorBook.hasNext()) {
			Book thebook = iteratorBook.next();
			System.out.println("Details of the "+thebook);
	}
		TreeSet <ChemicalElement>chemicalElement = new TreeSet<ChemicalElement>();
		System.out.println("-------------Tree Set----------");
		System.out.println("Adding Element 1");
		chemicalElement.add(new ChemicalElement(1, "Hydrogen", "H", 1.0078));
		System.out.println("Adding Element 2");
		chemicalElement.add(new ChemicalElement(27, "Cobalt", "Co", 58.933));
		System.out.println("Adding Element 3");
		chemicalElement.add(new ChemicalElement(44, "Ruthenium", "Ru", 101.07));
		System.out.println("Adding Element 4");
		chemicalElement.add(new ChemicalElement(20, "Calcium", "Ca", 40.078));
		
		Iterator<ChemicalElement> iteratorChemicalElement = chemicalElement.iterator();
		while(iteratorChemicalElement.hasNext()) {
			ChemicalElement thechemicalElement = iteratorChemicalElement.next();
			System.out.println("Details of the "+thechemicalElement);
		
	}
	}
}
class Log{
	String logType;
	LocalDate logDate;
	String name;
	public Log(String logType, LocalDate logDate, String name) {
		super();
		this.logType = logType;
		this.logDate = logDate;
		this.name = name;
	}
	@Override
	public String toString() {
		return "Log [logType=" + logType + ", logDate=" + logDate + ", name=" + name + "]";
	}
	
	
	
	
}
class Contact{
	String contactName;
	long mobileNumber;
	String emailAddress;
	public Contact(String contactName, long mobileNumber, String emailAddress) {
		super();
		this.contactName = contactName;
		this.mobileNumber = mobileNumber;
		this.emailAddress = emailAddress;
	}
	@Override
	public String toString() {
		return "Contact [contactName=" + contactName + ", mobileNumber=" + mobileNumber + ", emailAddress="
				+ emailAddress + "]";
	}
	
}
class ChemicalElement implements Comparable <ChemicalElement>{
	 int atomicNumber;
	 String atomicName;
	 String atomicFormula;
	 double atomicWeight;
	public ChemicalElement(int atomicNumber, String atomicName, String atomicFormula, double atomicWeight) {
		super();
		this.atomicNumber = atomicNumber;
		this.atomicName = atomicName;
		this.atomicFormula = atomicFormula;
		this.atomicWeight = atomicWeight;
	}
	@Override
	public String toString() {
		return "ChemicalElement [atomicNumber=" + atomicNumber + ", atomicName=" + atomicName + ", atomicFormula="
				+ atomicFormula + ", atomicWeight=" + atomicWeight + "]";
	}
	
	@Override
	public int compareTo(ChemicalElement o) {
		System.out.println("Comparing"+atomicNumber+"with"+o.atomicNumber);
		return Integer.compare(atomicNumber,atomicNumber);
	} 
}
class Book{
	int isbnNumber;
	String bookName;
	String author;
	double price;
	public Book(int isbnNumber, String bookName, String author, double price) {
		super();
		this.isbnNumber = isbnNumber;
		this.bookName = bookName;
		this.author = author;
		this.price = price;
	}
	@Override
	public String toString() {
		return "Book [isbnNumber=" + isbnNumber + ", bookName=" + bookName + ", author=" + author + ", price=" + price
				+ "]";
	}
}
